#!/bin/bash

# Update container IP in docker network

run_default_on_fail="${1:-yes}"

# Retorna o IP do contêiner na rede do Docker
network_docker_ip() {
    net="$(/sbin/ip route | awk '/default/ { print $5 }')"
    ifconfig "$net" | sed -En 's/.*inet ([^ ]*) .*/\1/p'
}

# Retorna o netmask da rede do docker
network_docker_netmask() {
    net="$(/sbin/ip route | awk '/default/ { print $5 }')"
    ifconfig "$net" | sed -En 's/.*netmask ([^ ]*) .*/\1/p'
}

# Retorna o nome da conexão padrão
network_docker_interface() {
    /sbin/ip route | awk '/default/ { print $5 }'
}

ip_local="$(network_docker_ip)"
netmask_local="$(network_docker_netmask)"
interface_local="$(network_docker_interface)"

# Check if docker network ip is in use
docker_ip="$(cd /conf/usr/local/hestia/data/ips && ls -1tr * 2>/dev/null | head -1)"
if [[ ! -f "/conf/usr/local/hestia/data/ips/$ip_local" && "$(echo "$docker_ip" | grep -E "^172.")" ]]; then
    # Update Docker IP
    mv "/conf/usr/local/hestia/data/ips/$docker_ip" "/conf/usr/local/hestia/data/ips/$ip_local"
elif [[ ! -f "/conf/usr/local/hestia/data/ips/$ip_local" && -f "/conf/usr/local/hestia/data/ips/127.0.0.1" ]]; then
    # Convert local IP to docker IP
    docker_ip="127.0.0.1"
    mv "/conf/usr/local/hestia/data/ips/127.0.0.1" "/conf/usr/local/hestia/data/ips/$ip_local"
else
    docker_ip=""
fi

# Check if the IP is already updated
if [[ -f "/conf/usr/local/hestia/data/ips/$ip_local" ]]; then
    # Get the external IP in use
    current_nat_ip="$(sed -En "s/^NAT='(.*)'$/\1/p" "/conf/usr/local/hestia/data/ips/$ip_local")"
    # Get current external IP
    external_ip="$(dig +short myip.opendns.com @resolver1.opendns.com)"

    # Update the external IP in users configs
    for f in /home/*; do
        user="$(basename -- "$f")"

        [[ "$docker_ip" ]] && sed -i "s/$docker_ip/$ip_local/g" "/conf/usr/local/hestia/data/users/$user/web.conf"
        sed -i "s/$current_nat_ip/$ip_local/g" "/conf/usr/local/hestia/data/users/$user/web.conf"

        [[ "$docker_ip" ]] && sed -i "s/$docker_ip/$external_ip/g" "/conf/usr/local/hestia/data/users/$user/dns.conf"
        sed -i "s/$current_nat_ip/$external_ip/g" "/conf/usr/local/hestia/data/users/$user/dns.conf"

        if [[ "$(ls -A "/conf/usr/local/hestia/data/users/$user/dns/")" ]]; then
            [[ "$docker_ip" ]] && sed -i "s/$docker_ip/$external_ip/g" "/conf/usr/local/hestia/data/users/$user/dns/"*.conf
            sed -i "s/$current_nat_ip/$external_ip/g" "/conf/usr/local/hestia/data/users/$user/dns/"*.conf
        fi
    done

    # Update in Hestia firewall
    [[ "$docker_ip" ]] && sed -i "s/$docker_ip/$external_ip/g" /conf/usr/local/hestia/data/firewall/*.conf
    sed -i "s/$current_nat_ip/$external_ip/g" /conf/usr/local/hestia/data/firewall/*.conf

    # Update in Hestia IPs
    if [[ "$docker_ip" ]]; then
        sed -Ei "s/(^INTERFACE=).*/\1'$interface_local'/" "/conf/usr/local/hestia/data/ips/$ip_local"
        sed -Ei "s/(^NETMASK=).*/\1'$netmask_local'/" "/conf/usr/local/hestia/data/ips/$ip_local"
    fi

    # Update sys ip
    if [[ "$docker_ip" || "$external_ip" != "$current_nat_ip" ]]; then
        /usr/local/hestia/bin/v-change-sys-ip-nat "$ip_local" "$external_ip" 2>/dev/null
    fi

    /usr/local/hestia/bin/v-restart-dns
    /usr/local/hestia/bin/v-update-firewall

    echo "Current IP $ip_local -> $external_ip"
elif [[ "${run_default_on_fail,,}" == "yes" ]]; then
    # Run default Hestia script
    /usr/local/hestia/bin/v-update-sys-ip

    # Try again
    /usr/local/hstc/bin/v-update-container-ip no
fi
